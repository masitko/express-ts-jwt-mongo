version: '3.1'
services:
  node:
    #    restart: always
    image: node
    volumes:
      - ../:/var/www/html
      # - ./root:/root
    working_dir: /var/www/html
    ports:
      - '21057:5057'
      - '8081:8081'
    expose:
      - "5057"
    command: "npm run dev"
    # logging:
    #   driver: "none"
    # networks:
    #   auth-jwt:
    #     ipv4_address: 172.22.0.7
  nginx:
    # restart: always
    image: nginx
    ports:
      - 21080:80
      - 21443:443
    volumes:
      - ../:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/hosts:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/logs:/var/log/nginx
    links:
      - node
    depends_on:
      node:
        condition: service_started
    networks:
      default:
        ipv4_address: 172.22.0.9
  mongo:
    image: mongo
    restart: always
    volumes:
      - ./mongo-files:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      # to be used by init scripts:
      MONGO_USER: dbuser
      MONGO_PASSWORD: dbpass
      MONGO_DB_NAME: auth_jwt_db
    logging:
      driver: "none"
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 21081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_MONGODB_URL: mongodb://root:pass@mongo:27017/
networks:
  default:
    driver: bridge
    attachable: false
    ipam:
      config:
        - subnet: 172.22.0.0/24
